use crate::utils::arrayX::ArrayX;
use crate::BigNum;
use crate::BigNumParamsTrait;
use crate::bignum_test::{
    test_mul, test_add, test_div, test_invmod, assert_is_not_equal, assert_is_not_equal_fail,
    assert_is_not_equal_overloaded_lhs_fail, assert_is_not_equal_overloaded_rhs_fail,
    assert_is_not_equal_overloaded_fail
};
use crate::mul::{schoolbook_mult, karatsuba_mult_9};

struct Test1000NonPrimeParams {}

impl BigNumParamsTrait<9> for Test1000NonPrimeParams {
    // p = 9401683311848256470662102141604785694475695944919537208599277182601772326405856864912014330659257414250428203972330585253735585663211217297425578256789033464602884027603243165613571937049913325470140230291076861628696839313103888848110448224372612948503661672980046852865802391667097425360184139342129
    fn modulus() -> [Field; 9] {
      [522847723171855307916426883333120305, 262979018000542161256904789233305093, 503712366861779868807245037096546653, 812041415975024662364287989967260273, 1116648934386612627649958014904716889, 1101466462412337326349688919116174439, 664138632279390122145065962438536238, 1128747700170892727838412240222985924, 964738878690]
    }

    fn double_modulus() -> [Field; 9] {
      [1045695446343710615832853766666240610, 525958036001084322513809578466610186, 1007424733723559737614490074193093306, 294854836165133451824768919654175970, 904069872988309382396108969529089203, 873704929039758779795570777952004303, 1328277264558780244290131924877072477, 928267404556869582773017420165627272, 1929477757381]
    }

    fn redc_param() -> [Field; 9] {
      // floor(2^(2*1000) / p)
      // 12211969465375940304819119282886675867855029716169709767482278338515762921503552378988767462772708779000542918647607664922466698808148160215709683348736786274165815381188919121527264504597014989375955143820279677620292357041549637167228736402940109268531435141774386665926018695833482714247418127146539
      [72431644369263021815025345014619691, 199919745793305993335425059409245666, 1253301774007381615237025718706626724, 1237378107759094794716195745002542421, 442864831871387656950022331624146375, 1134103991660066985960096350820725604, 837012982653208393866748427651584255, 252683822611706897009579292575682354, 1253111952174]
    }

    fn modulus_bits() -> u64 {
        1000
    }

    fn mult(a: [Field; 9], b: [Field; 9]) -> ArrayX<Field, 9, 2> {
        karatsuba_mult_9(a,b)
    }
}
