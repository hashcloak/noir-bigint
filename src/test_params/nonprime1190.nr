use crate::utils::arrayX::ArrayX;
use crate::BigNum;
use crate::BigNumParamsTrait;
use crate::bignum_test::{
    test_mul, test_add, test_div, test_invmod, assert_is_not_equal, assert_is_not_equal_fail,
    assert_is_not_equal_overloaded_lhs_fail, assert_is_not_equal_overloaded_rhs_fail,
    assert_is_not_equal_overloaded_fail
};
use crate::mul::{schoolbook_mult, karatsuba_mult_10};

struct Test1190NonPrimeParams {}

impl BigNumParamsTrait<10> for Test1190NonPrimeParams {
  fn modulus() -> [Field; 10] {
    [718836564803772968009225971503185862, 406816680189117930412201270996594824, 438259063016648313575137468101384124, 229410859661709760435003777171170247, 824368389882116701178352038940380302, 1174003656001627677126251200491136592, 825061764399779114401536511304327704, 713591424334896054677028665258316771, 1094333610586508588788217763946687869, 458679149402316065319391621413311]
  }

  fn double_modulus() -> [Field; 10] {
    [108445133822630063114644882726027148, 813633360378235860824402541993189649, 876518126033296627150274936202768248, 458821719323419520870007554342340494, 319508783979317529452897017600416028, 1018779316218339481348695340701928609, 320895533014642355899265962328310833, 97954852884876236450250270236288967, 859439225388101304672628467613031163, 917358298804632130638783242826623]
  }

  fn redc_param() -> [Field; 10] {
    // floor(2^(2*1190) / p
    [581077333637459519798769384992737626, 492724279190573871224343727173841871, 161327670320796269196647289459640721, 1084445517419003358746621194540697945, 1253088855314580018286704383747034208, 681296296373707261293997114247956949, 992161475939393326295983215183610618, 222045414410249359319122114821926929, 1296623819143808491785323247167322894, 3673584615504230995769934358024722]
  }

  fn modulus_bits() -> u64 {
    1190 
  }

  fn mult(a: [Field; 10], b: [Field; 10]) -> ArrayX<Field, 10, 2> {
    karatsuba_mult_10(a, b)
  }
}
