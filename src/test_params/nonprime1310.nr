use crate::utils::arrayX::ArrayX;
use crate::BigNum;
use crate::BigNumParamsTrait;
use crate::bignum_test::{
    test_mul, test_add, test_div, test_invmod, assert_is_not_equal, assert_is_not_equal_fail,
    assert_is_not_equal_overloaded_lhs_fail, assert_is_not_equal_overloaded_rhs_fail,
    assert_is_not_equal_overloaded_fail
};
use crate::mul::{schoolbook_mult, karatsuba_mult_11};

struct Test1310NonPrimeParams {}

impl BigNumParamsTrait<11> for Test1310NonPrimeParams {
  fn modulus() -> [Field; 11] {
    [907563300193821129013552700236635650, 198161213312936877810352657773872242, 574291793625701450693752305638620502, 633482836396425847517631473139550321, 161239504794726301902083089689702517, 569109647105852963197752165866084995, 1247846398938485010844479363610983789, 979712300837448192851855336456737704, 42059768323030746102482805390027633, 513473373886705657047356242851377312, 385905203845329236269386454055586]
  }

  fn double_modulus() -> [Field; 11] {
    [485898604602726385123298340192926724, 396322426625873755620705315547744485, 1148583587251402901387504611277241004, 1266965672792851695035262946279100642, 322479009589452603804166179379405034, 1138219294211705926395504331732169990, 1166464802092054148785151666941623002, 630196605889980512799903612633130833, 84119536646061492204965610780055267, 1026946747773411314094712485702754624, 771810407690658472538772908111172]
  }

  fn redc_param() -> [Field; 11] {
    // floor(2^(2*1310) / p
    [1163830582930334271849516046481083139, 1174922416129257610851289669200818731, 510571872224604946538080501987504136, 475780736429227487952851240375763194, 552545950743198472844891413236526114, 528928826040463841665871517890618892, 1064735924582164570152534969929584081, 1173841680623549858960900433948563401, 558796669444511378350043792984437830, 1166316414750900531836027223353770890, 4366348652225642098157773550153778]
  }

  fn modulus_bits() -> u64 {
    1310
  }

  fn mult(a: [Field; 11], b: [Field; 11]) -> ArrayX<Field, 11, 2> {
    karatsuba_mult_11(a, b)
  }
}
