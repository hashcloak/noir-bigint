use crate::utils::arrayX::ArrayX;
use crate::BigNum;
use crate::BigNumParamsTrait;
use crate::bignum_test::{
    test_mul, test_add, test_div, test_invmod, assert_is_not_equal, assert_is_not_equal_fail,
    assert_is_not_equal_overloaded_lhs_fail, assert_is_not_equal_overloaded_rhs_fail,
    assert_is_not_equal_overloaded_fail
};
use crate::mul::{schoolbook_mult, karatsuba_mult_12};

struct Test250NonPrimeParams {}

impl BigNumParamsTrait<12> for Test250NonPrimeParams {
  fn modulus() -> [Field; 12] {
    [1168279869308004741471899385850824248, 717609637354522971790516049017740648, 119224995026414384427301864045239302, 696422113207419229540836964315440542, 715222719135197638464248978557183970, 218979710517863977092495173732621179, 387213135741658346106843448448848109, 156355709123781207331489778328927143, 518017989544163088266875111929066341, 375753717475038866601665027786507832, 874869906699883155946719597227952448, 40765057294489687515297741875433250]
  }

  fn double_modulus() -> [Field; 12] {
    [1007331742831093610039991711421303920, 105991278924130070677225037755136721, 238449990052828768854603728090478605, 63616230629922586177866868350536508, 101217442485479404024690896834023365, 437959421035727954184990347465242359, 774426271483316692213686896897696218, 312711418247562414662979556657854286, 1036035979088326176533750223858132682, 751507434950077733203330055573015664, 420511817614850438989632134175560320, 81530114588979375030595483750866501]
  }

  fn redc_param() -> [Field; 12] {
    // floor(2^(2*1435) / p
    [193168503171490795095357646533664483, 606083625524828812777415330590069458, 1192902986581664358356591385965461120, 1150577890963142555660286819279960772, 898905735891265316753709169917698027, 174805949793528607070245066790283472, 248833209632719788149793470537296307, 1230453935570156789772319589312067211, 287925423448232473409613512970651891, 763864167489735800509861374095222561, 505396894466730410048611877919295828, 169305449442444171891930173971092434]
  }

  fn modulus_bits() -> u64 {
    1435
  }

  fn mult(a: [Field; 12], b: [Field; 12]) -> ArrayX<Field, 12, 2> {
    karatsuba_mult_12(a, b)
  }
}
